/***************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (directui@nokia.com)
**
** This file is part of libmeegotouch.
**
** If you have questions regarding the use of this file, please contact
** Nokia at directui@nokia.com.
**
** This library is free software; you can redistribute it and/or
** modify it under the terms of the GNU Lesser General Public
** License version 2.1 as published by the Free Software Foundation
** and appearing in the file LICENSE.LGPL included in the packaging
** of this file.
**
****************************************************************************/

#include "ftmservicefwgen1adaptor.h"

#include <MComponentData>
#include <MDebug>

#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

namespace fakegalleryserviceinterface {

/*
 * Implementation of adaptor class FtMServiceFwGen1Adaptor
 */

FtMServiceFwGen1Adaptor::FtMServiceFwGen1Adaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

FtMServiceFwGen1Adaptor::~FtMServiceFwGen1Adaptor()
{
    // destructor
}

void FtMServiceFwGen1Adaptor::bug172441(const uint _windowId, const QString _taskTitle)
{
    MComponentData::ChainData thisData( _windowId, _taskTitle );
    MComponentData::pushChainData( thisData );

    // handle method call com.nokia.fakegalleryserviceinterface.bug172441
    QMetaObject::invokeMethod(parent(), "bug172441");
}

bool FtMServiceFwGen1Adaptor::showGridWithCapturedContent(int limit)
{
    // handle method call com.nokia.fakegalleryserviceinterface.showGridWithCapturedContent
    bool out0;
    QMetaObject::invokeMethod(parent(), "showGridWithCapturedContent", Q_RETURN_ARG(bool, out0), Q_ARG(int, limit));
    return out0;
}

bool FtMServiceFwGen1Adaptor::showImage(const QString &uri, const QString &playlistName, const QString &defaultBackPage)
{
    // handle method call com.nokia.fakegalleryserviceinterface.showImage
    bool out0;
    QMetaObject::invokeMethod(parent(), "showImage", Q_RETURN_ARG(bool, out0), Q_ARG(QString, uri), Q_ARG(QString, playlistName), Q_ARG(QString, defaultBackPage));
    return out0;
}

void FtMServiceFwGen1Adaptor::showImage(const uint _windowId, const QString _taskTitle, const QString &uri, const QStringList &uriList)
{
    MComponentData::ChainData thisData( _windowId, _taskTitle );
    MComponentData::pushChainData( thisData );

    // handle method call com.nokia.fakegalleryserviceinterface.showImage
    QMetaObject::invokeMethod(parent(), "showImage", Q_ARG(QString, uri), Q_ARG(QStringList, uriList));
}

bool FtMServiceFwGen1Adaptor::showPage(const QString &targetPage, const QString &previousPage)
{
    // handle method call com.nokia.fakegalleryserviceinterface.showPage
    bool out0;
    QMetaObject::invokeMethod(parent(), "showPage", Q_RETURN_ARG(bool, out0), Q_ARG(QString, targetPage), Q_ARG(QString, previousPage));
    return out0;
}

bool FtMServiceFwGen1Adaptor::showSettings()
{
    // handle method call com.nokia.fakegalleryserviceinterface.showSettings
    bool out0;
    QMetaObject::invokeMethod(parent(), "showSettings", Q_RETURN_ARG(bool, out0));
    return out0;
}


}; // namespace
