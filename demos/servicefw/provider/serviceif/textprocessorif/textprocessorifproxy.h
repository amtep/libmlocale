/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c TextProcessorIfProxy -p textprocessorifproxy.h:textprocessorifproxy.cpp com.nokia.TextProcessorIf.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef TEXTPROCESSORIFPROXY_H_1258470141
#define TEXTPROCESSORIFPROXY_H_1258470141

#include <DuiComponentData>

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.nokia.TextProcessorIf
 */
class TextProcessorIfProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName() {
        return "com.nokia.TextProcessorIf";
    }

public:
    TextProcessorIfProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~TextProcessorIfProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> reverse(const QString &message) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(message);
        return asyncCallWithArgumentList(QLatin1String("reverse"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com
{
    namespace nokia
    {
        typedef ::TextProcessorIfProxy TextProcessorIf;
    }
}
#endif
