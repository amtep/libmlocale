/*! \page pagenavigation_menu_example Application Menu Navigational Pattern Code Example

Those are the three main points for implementing this navigational pattern:
  - Add actions to the MApplicationWindow and have their locations set to MAction::ApplicationMenuLocation so that they appear in the application menu.
\code
action->setLocation(MAction::ApplicationMenuLocation);
applicationWindow->addAction(action);
\endcode

  - Connect the triggered() signal of those actions to slots that make the corresponding pages appear.
\code
window->connect(settingsAction, SIGNAL(triggered()), SLOT(showSettingsPage()));
\endcode

  - Have the MApplicationPage::escapeMode() of your pages set to MApplicationPageModel::EscapeCloseWindow, otherwise the escape button will behave like in a drill down navigational pattern.
\code
page->setEscapeMode(MApplicationPageModel::EscapeCloseWindow);
\endcode

Optionally, as was done in this example, you could hide or disable the menu option (i.e. MApplicationWindow action whose location is set to ApplicationMenu) that corresponds to the page that is currently being displayed.

In this example the actions were grouped in a QActionGroup only because I wanted the same method to be called whenever any of those actions are triggered.

All files can be found at:
\verbatim
libmeegotouch/examples/pagenavigation_menu
\endverbatim

main.cpp:
\include pagenavigation_menu/main.cpp

samplewindow.cpp:
\include pagenavigation_menu/samplewindow.cpp

samplewindow.h:
\include pagenavigation_menu/samplewindow.h

*/
