/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp notificationmanager.xml -p duinotificationmanagerproxy -c DuiNotificationManagerProxy -v -i metatypedeclarations.h
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */


#ifndef DUINOTIFICATIONMANAGERPROXY_H_1259674559
#define DUINOTIFICATIONMANAGERPROXY_H_1259674559

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "metatypedeclarations.h"

//! \internal

/*
 * Proxy class for interface org.maemo.dui.NotificationManager
 */
class DuiNotificationManagerProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName() {
        return "org.maemo.dui.NotificationManager";
    }

public:
    DuiNotificationManagerProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~DuiNotificationManagerProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<uint> addGroup(uint notificationUserId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count, bool persistent) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(eventType) << qVariantFromValue(summary) << qVariantFromValue(body) << qVariantFromValue(action) << qVariantFromValue(imageURI) << qVariantFromValue(count) << qVariantFromValue(persistent);
        return asyncCallWithArgumentList(QLatin1String("addGroup"), argumentList);
    }

    inline QDBusPendingReply<uint> addGroup(uint notificationUserId, const QString &eventType, bool persistent) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(eventType) << qVariantFromValue(persistent);
        return asyncCallWithArgumentList(QLatin1String("addGroup"), argumentList);
    }

    inline QDBusPendingReply<uint> addNotification(uint notificationUserId, uint groupId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count, bool persistent) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(groupId) << qVariantFromValue(eventType) << qVariantFromValue(summary) << qVariantFromValue(body) << qVariantFromValue(action) << qVariantFromValue(imageURI) << qVariantFromValue(count) << qVariantFromValue(persistent);
        return asyncCallWithArgumentList(QLatin1String("addNotification"), argumentList);
    }

    inline QDBusPendingReply<uint> addNotification(uint notificationUserId, uint groupId, const QString &eventType, bool persistent) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(groupId) << qVariantFromValue(eventType) << qVariantFromValue(persistent);
        return asyncCallWithArgumentList(QLatin1String("addNotification"), argumentList);
    }

    inline QDBusPendingReply<QList< uint > > notificationIdList(uint notificationUserId) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId);
        return asyncCallWithArgumentList(QLatin1String("notificationIdList"), argumentList);
    }

    inline QDBusPendingReply<uint> notificationUserId() {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("notificationUserId"), argumentList);
    }

    inline QDBusPendingReply<bool> removeGroup(uint notificationUserId, uint groupId) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(groupId);
        return asyncCallWithArgumentList(QLatin1String("removeGroup"), argumentList);
    }

    inline QDBusPendingReply<bool> removeNotification(uint notificationUserId, uint notificationId) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(notificationId);
        return asyncCallWithArgumentList(QLatin1String("removeNotification"), argumentList);
    }

    inline QDBusPendingReply<bool> updateGroup(uint notificationUserId, uint groupId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(groupId) << qVariantFromValue(eventType) << qVariantFromValue(summary) << qVariantFromValue(body) << qVariantFromValue(action) << qVariantFromValue(imageURI) << qVariantFromValue(count);
        return asyncCallWithArgumentList(QLatin1String("updateGroup"), argumentList);
    }

    inline QDBusPendingReply<bool> updateGroup(uint notificationUserId, uint groupId, const QString &eventType) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(groupId) << qVariantFromValue(eventType);
        return asyncCallWithArgumentList(QLatin1String("updateGroup"), argumentList);
    }

    inline QDBusPendingReply<bool> updateNotification(uint notificationUserId, uint notificationId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(notificationId) << qVariantFromValue(eventType) << qVariantFromValue(summary) << qVariantFromValue(body) << qVariantFromValue(action) << qVariantFromValue(imageURI) << qVariantFromValue(count);
        return asyncCallWithArgumentList(QLatin1String("updateNotification"), argumentList);
    }

    inline QDBusPendingReply<bool> updateNotification(uint notificationUserId, uint notificationId, const QString &eventType) {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(notificationUserId) << qVariantFromValue(notificationId) << qVariantFromValue(eventType);
        return asyncCallWithArgumentList(QLatin1String("updateNotification"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org
{
    namespace maemo
    {
        namespace dui
        {
            typedef ::DuiNotificationManagerProxy NotificationManager;
        }
    }
}

//! \internal_end

#endif
